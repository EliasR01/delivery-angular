{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///node_modules/moment/locale sync ^\\.\\/.*$","webpack:///src/app/add-service/add-service.component.ts","webpack:///src/app/add-service/add-service.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/bill/bill.component.ts","webpack:///src/app/bill/bill.component.html","webpack:///src/app/dashboard.service.ts","webpack:///src/app/dashboard/dashboard.component.ts","webpack:///src/app/dashboard/dashboard.component.html","webpack:///src/app/dialog/dialog.component.ts","webpack:///src/app/dialog/dialog.component.html","webpack:///src/app/forgot-password/forgot-password.component.ts","webpack:///src/app/forgot-password/forgot-password.component.html","webpack:///src/app/graphql.module.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/line-chart/line-chart.component.ts","webpack:///src/app/line-chart/line-chart.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/mutations/createOrder.ts","webpack:///src/app/mutations/createProduct.ts","webpack:///src/app/mutations/createService.ts","webpack:///src/app/mutations/createUser.ts","webpack:///src/app/mutations/deleteProduct.ts","webpack:///src/app/mutations/login.ts","webpack:///src/app/mutations/logout.ts","webpack:///src/app/mutations/requestReset.ts","webpack:///src/app/mutations/resetPassword.ts","webpack:///src/app/mutations/updateOrder.ts","webpack:///src/app/mutations/updateProduct.ts","webpack:///src/app/mutations/updateUser.ts","webpack:///src/app/order-dialog/order-dialog.component.ts","webpack:///src/app/order-dialog/order-dialog.component.html","webpack:///src/app/order/order.component.ts","webpack:///src/app/order/order.component.html","webpack:///src/app/queries/getOrdersByUser.ts","webpack:///src/app/queries/getProductsById.ts","webpack:///src/app/queries/getServices.ts","webpack:///src/app/queries/getServicesByType.ts","webpack:///src/app/queries/getTypeServices.ts","webpack:///src/app/queries/getUserById.ts","webpack:///src/app/register/register.component.ts","webpack:///src/app/register/register.component.html","webpack:///src/app/summary/summary.component.ts","webpack:///src/app/summary/summary.component.html","webpack:///src/app/take-order/take-order.component.html","webpack:///src/app/take-order/take-order.component.ts","webpack:///src/app/user-profile/user-profile.component.html","webpack:///src/app/user-profile/user-profile.component.ts","webpack:///src/app/utils.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","map","webpackContext","webpackContextResolve","__webpack_require__","o","webpackContextKeys","Object","AddServiceComponent","service","apollo","dialog","location","detector","router","isEditingService","isProductDeleted","isProductAdded","products","deletedProducts","addedProducts","loading","serviceForm","type","required","name","description","productForm","stock","price","isButtonEnabled","isProductEnabled","valid","value","find","element","undefined","createProductData","editableService","_id","push","resetForm","open","data","index","indexOf","splice","length","createProduct","deleteProduct","createService","serviceData","user","userData","createServiceData","mutate","mutation","variables","subscribe","console","log","productData","toPromise","navigate","form","controls","setValue","reset","back","query","res","typeServices","getTypeOfService","response","getProductsById","markForCheck","toggleDescription","addProduct","submit","selector","templateUrl","styleUrls","routes","path","component","children","AppRoutingModule","forRoot","imports","AppComponent","title","AppModule","provide","useValue","initializeApp","firebaseConfig","declarations","providers","bootstrap","BillComponent","submitBill","toggleBill","displayedColumns","dataSource","date","Date","toLocaleDateString","emit","forEach","amount","unitPrice","total","Number","toFixed","DashboardService","storage","file","username","filePath","toISOString","fileRef","ref","task","upload","url","snapshotChanges","pipe","getDownloadURL","fileUrl","templateParams","send","refFromURL","providedIn","DashboardComponent","clicked","userId","getUserById","setRoutes","message","route","navItems","displayName","iconName","action","nothing","bind","logout","token","document","cookie","split","payload","queryUserData","err","DialogComponent","ForgotPasswordComponent","isRecovering","isCodeValid","email","passwordForm","password","confirmPassword","requestReset","confirm","where","go","changeDetection","OnPush","createApollo","httpLink","uri","errorLink","graphQLErrors","networkError","from_name","to_name","subject","message_html","locations","result","text","error","authMiddleware","operation","forward","accessToken","setContext","headers","authentication","endpoint","create","withCredentials","link","cache","GraphQLModule","useFactory","deps","HomeComponent","LineChartComponent","chartLabels","lineChartData","label","lineChartOptions","responsive","scales","yAxes","ticks","beginAtZero","stepSize","lineChartColors","backgroundColor","borderColor","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","lineChartLegend","lineChartType","lineChartPlugins","lineChartLabels","month","allOrders","pendingOrders","completedOrders","LoginComponent","openDialog","loginForm","minLength","login","CREATE_ORDER","CREATE_PRODUCT","CREATE_SERVICE","CREATE_USER","DELETE_PRODUCT","LOGIN","LOGOUT","REQUEST_RESET","RESET_PASSWORD","UPDATE_ORDER","UPDATE_PRODUCT","UPDATE_USER","OrderDialogComponent","dialogRef","isError","statuses","viewValue","orderForm","address","status","order","withAddress","orderData","close","errorMessage","update","OrderComponent","selectedType","selectedService","takeOrder","typeService","servicesData","getServiceByType","GET_ORDERS_BY_USER","GET_PRODUCTS_BY_IDS","GET_SERVICES","GET_SERVICES_BY_TYPE","GET_TYPE_SERVICE","GET_USER_BY_ID","RegisterComponent","types","imageUrl","userForm","country","event","reader","FileReader","target","files","readAsDataURL","onload","uploadFile","createUser","removeFile","onChangeFile","register","SummaryComponent","allOrdersMap","pendingOrdersMap","completedOrdersMap","completed","months","isBusiness","userID","services","getServiceByUser","orders","getOrdersByUser","filter","emited","toString","isButtonVisible","editUserInfo","TakeOrderComponent","selectedProducts","today","now","changeAddress","disableSubmit","bill","disabled","userInformation","product","checkbox","__typename","checked","containsProduct","i","template","getElementById","canvas","imgWidth","imgHeight","height","width","xAxis","yAxis","doc","image","toDataURL","addImage","output","xhr","XMLHttpRequest","formData","FormData","append","setRequestHeader","exportPdf","toDateString","business","refetchQueries","UserProfileComponent","currentPassword","updateUser","filteredData","setAccessToken","getAccessToken","environment","production","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn-bd\": \"./node_modules/moment/locale/bn-bd.js\",\n\t\"./bn-bd.js\": \"./node_modules/moment/locale/bn-bd.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-in\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-in.js\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-sg\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./en-sg.js\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-mx\": \"./node_modules/moment/locale/es-mx.js\",\n\t\"./es-mx.js\": \"./node_modules/moment/locale/es-mx.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fil\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fil.js\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-deva\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-deva.js\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./oc-lnc\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./oc-lnc.js\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tk\": \"./node_modules/moment/locale/tk.js\",\n\t\"./tk.js\": \"./node_modules/moment/locale/tk.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-mo\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-mo.js\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","import { ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\nimport { DashboardService } from '../dashboard.service';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { CdkTextareaAutosize } from '@angular/cdk/text-field';\nimport { CREATE_SERVICE } from '../mutations/createService';\nimport { GET_PRODUCTS_BY_IDS } from '../queries/getProductsById';\nimport { DELETE_PRODUCT } from '../mutations/deleteProduct';\nimport { CREATE_PRODUCT } from '../mutations/createProduct';\nimport { TypeService } from '../types';\nimport { DialogComponent } from '../dialog/dialog.component';\nimport {\n  ServiceDataResponse,\n  ProductDataResponse,\n  TypeServiceResponse,\n} from '../interfaces';\nimport { GET_TYPE_SERVICE } from '../queries/getTypeServices';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Apollo } from 'apollo-angular';\nimport { Product } from '../types';\nimport { Location } from '@angular/common';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-add-service',\n  templateUrl: './add-service.component.html',\n  styleUrls: ['./add-service.component.scss'],\n})\nexport class AddServiceComponent implements OnInit {\n  typeServices: TypeService[];\n  @ViewChild('autosize') autosize: CdkTextareaAutosize;\n  constructor(\n    private service: DashboardService,\n    private apollo: Apollo,\n    private dialog: MatDialog,\n    private location: Location,\n    private detector: ChangeDetectorRef,\n    private router: Router\n  ) {}\n  isEditingService: Boolean = false;\n  isProductDeleted: Boolean = false;\n  isProductAdded: Boolean = false;\n  products: Product[] = [];\n  deletedProducts: Product[] = [];\n  addedProducts: Product[] = [];\n  loading: Boolean = false;\n\n  serviceForm = new FormGroup({\n    type: new FormControl('', [Validators.required]),\n    name: new FormControl('', [Validators.required]),\n    description: new FormControl('', [Validators.required]),\n  });\n\n  productForm = new FormGroup({\n    name: new FormControl('', [Validators.required]),\n    stock: new FormControl(0, [Validators.required]),\n    price: new FormControl(0.0, [Validators.required]),\n    description: new FormControl('', [Validators.required]),\n  });\n  isButtonEnabled: Boolean = false;\n  isProductEnabled: Boolean = this.serviceForm.valid;\n  description: string = 'Description';\n\n  toggleDescription(): void {\n    if (this.serviceForm.value.type === 'Food') {\n      this.description = 'Ingredients';\n    } else {\n      this.description = 'Description';\n    }\n  }\n\n  addProduct(): void {\n    if (\n      this.products.find(\n        (element) => element.name === this.productForm.value.name\n      ) === undefined\n    ) {\n      if (\n        this.productForm.value.stock > 0 &&\n        this.productForm.value.price > 0 &&\n        this.productForm.value.name != '' &&\n        this.productForm.value.description != ''\n      ) {\n        if (!this.isProductDeleted) {\n          if (this.isEditingService) {\n            this.isProductAdded = true;\n            const createProductData = {\n              ...this.productForm.value,\n              service: this.service.editableService._id,\n            };\n            this.addedProducts.push(createProductData);\n          }\n          this.products.push(this.productForm.value);\n          this.resetForm('ProductForm');\n          this.isButtonEnabled = true;\n        } else {\n          this.dialog.open(DialogComponent, {\n            data:\n              'Can only perform 1 operation when editing service, either Add or Delete a product!',\n          });\n        }\n      } else {\n        this.dialog.open(DialogComponent, {\n          data: 'Must complete the form before adding a product!',\n        });\n      }\n    } else {\n      this.dialog.open(DialogComponent, {\n        data: 'That name of product has been already added!',\n      });\n    }\n  }\n\n  removeProduct(value: Product): void {\n    if (!this.isProductAdded) {\n      const index = this.products.indexOf(value);\n      if (this.isEditingService) {\n        this.isButtonEnabled = true;\n        this.isProductDeleted = true;\n        this.deletedProducts.push(this.products[index]);\n      }\n\n      this.products.splice(index, 1);\n      if (this.products.length == 0) {\n        this.isButtonEnabled = false;\n      }\n    } else {\n      this.dialog.open(DialogComponent, {\n        data:\n          'Can only perform 1 operation when editing service, either Add or Delete a product!',\n      });\n    }\n  }\n\n  submit(): void {\n    if (this.isEditingService) {\n      if (this.isProductAdded) {\n        this.createProduct();\n      } else if (this.isProductDeleted) {\n        this.deleteProduct();\n      }\n    } else {\n      this.createService();\n    }\n  }\n\n  createService(): void {\n    const serviceData = {\n      ...this.serviceForm.value,\n      user: this.service.userData._id,\n    };\n\n    const createServiceData = {\n      ...serviceData,\n      products: this.products,\n    };\n    this.apollo\n      .mutate<ServiceDataResponse>({\n        mutation: CREATE_SERVICE,\n        variables: {\n          serviceData: createServiceData,\n        },\n      })\n      .subscribe(() => {\n        this.dialog.open(DialogComponent, {\n          data: 'Service successfully created!',\n        });\n        this.resetForm('ProductForm');\n        this.resetForm('ServiceForm');\n        this.products = [];\n      });\n  }\n\n  createProduct(): void {\n    //Adds new product when the service is edited\n    console.log(this.addedProducts);\n    this.loading = true;\n    this.apollo\n      .mutate({\n        mutation: CREATE_PRODUCT,\n        variables: { productData: { products: this.addedProducts } },\n      })\n      .toPromise()\n      .then(() => {\n        this.loading = false;\n        this.router.navigate(['dashboard/summary']);\n        this.dialog.open(DialogComponent, {\n          data: 'Product added successfully',\n        });\n      })\n      .catch(() => {\n        this.loading = false;\n        this.dialog.open(DialogComponent, {\n          data: 'Something went wrong, please contact the support team',\n        });\n      });\n  }\n\n  deleteProduct(): void {\n    //Remove the product when the service is edited\n    this.loading = true;\n    const products = this.deletedProducts.map((value) => value._id);\n    this.apollo\n      .mutate({\n        mutation: DELETE_PRODUCT,\n        variables: {\n          data: {\n            _id: products,\n          },\n          service: { service: this.service.editableService._id },\n        },\n      })\n      .toPromise()\n      .then(() => {\n        this.loading = false;\n        this.router.navigate(['dashboard/summary']);\n        this.dialog.open(DialogComponent, {\n          data: 'Product deleted successfully',\n        });\n      })\n      .catch(() => {\n        this.loading = false;\n        this.dialog.open(DialogComponent, {\n          data: 'Something went wrong, please contact the support team',\n        });\n      });\n  }\n\n  resetForm(form: string): void {\n    if (form === 'ProductForm') {\n      this.productForm.controls['name'].setValue('');\n      this.productForm.controls['stock'].setValue(0);\n      this.productForm.controls['price'].setValue(0.0);\n      this.productForm.controls['description'].setValue('');\n    } else if (form === 'ServiceForm') {\n      this.serviceForm.reset();\n    }\n  }\n\n  back(): void {\n    this.location.back();\n  }\n\n  ngOnInit(): void {\n    this.loading = true;\n    this.apollo\n      .query<TypeServiceResponse>({ query: GET_TYPE_SERVICE })\n      .toPromise()\n      .then((res) => {\n        this.typeServices = res.data.getTypeOfService;\n        this.loading = false;\n      })\n      .catch(() => {\n        this.loading = false;\n        this.dialog.open(DialogComponent, { data: '' });\n      });\n\n    if (this.service.editableService) {\n      this.loading = true;\n      this.isEditingService = true;\n      this.serviceForm.controls['type'].setValue(\n        this.service.editableService.type\n      );\n      if (this.serviceForm.value.type === 'Food') {\n        this.description = 'Ingredients';\n      }\n      this.serviceForm.controls['name'].setValue(\n        this.service.editableService.name\n      );\n      this.serviceForm.controls['description'].setValue(\n        this.service.editableService.description\n      );\n      this.apollo\n        .query<ProductDataResponse>({\n          query: GET_PRODUCTS_BY_IDS,\n          variables: {\n            products: { _id: this.service.editableService.products },\n          },\n        })\n        .subscribe((response) => {\n          this.products = response.data.getProductsById;\n          this.loading = false;\n          this.detector.markForCheck();\n        });\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.service.editableService = null;\n    this.isEditingService = false;\n    this.isProductAdded = false;\n    this.isProductEnabled = false;\n    this.isProductDeleted = false;\n    this.products = [];\n    this.deletedProducts = [];\n    this.addedProducts = [];\n    this.loading = false;\n    this.resetForm('ProductForm');\n    this.resetForm('ServiceForm');\n  }\n}\n","<mat-progress-bar *ngIf=\"loading\" mode=\"indeterminate\"></mat-progress-bar>\n<div class=\"card-container\">\n  <mat-card>\n    <form [formGroup]=\"serviceForm\" class=\"service-card\">\n      <mat-card-header>\n        <mat-card-title>Create Service</mat-card-title>\n      </mat-card-header>\n      <label>Select Type of Service</label>\n      <mat-form-field>\n        <mat-label>Type of service</mat-label>\n        <mat-select\n          class=\"form-select\"\n          formControlName=\"type\"\n          (selectionChange)=\"toggleDescription()\"\n        >\n          <mat-option\n            *ngFor=\"let service of typeServices\"\n            [value]=\"service.name\"\n          >\n            {{ service.name }}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n      <label>Name</label>\n      <mat-form-field>\n        <mat-label>Service name</mat-label>\n        <input matInput formControlName=\"name\" />\n      </mat-form-field>\n      <label>Description</label>\n      <mat-form-field>\n        <mat-label>Description</mat-label>\n        <textarea\n          matInput\n          cdkTextareaAutosize\n          #autosize=\"cdkTextareaAutosize\"\n          cdkAutosizeMinRows=\"1\"\n          cdkAutosizeMaxRows=\"4\"\n          formControlName=\"description\"\n        ></textarea>\n      </mat-form-field>\n    </form>\n  </mat-card>\n  <mat-card>\n    <mat-card-header>\n      <mat-card-title>Add Product for Service</mat-card-title>\n    </mat-card-header>\n    <form\n      [formGroup]=\"productForm\"\n      class=\"product-card\"\n      (ngSubmit)=\"addProduct()\"\n    >\n      <mat-form-field>\n        <mat-label>Name</mat-label>\n        <input matInput formControlName=\"name\" />\n      </mat-form-field>\n      <mat-form-field>\n        <mat-label>Stock</mat-label>\n        <input matInput type=\"number\" min=\"0\" formControlName=\"stock\" />\n      </mat-form-field>\n      <mat-form-field>\n        <mat-label>Price</mat-label>\n        <input\n          matInput\n          type=\"number\"\n          min=\"0\"\n          step=\"0.1\"\n          formControlName=\"price\"\n        />\n      </mat-form-field>\n      <mat-form-field>\n        <mat-label>{{ description }}</mat-label>\n        <input matInput formControlName=\"description\" />\n      </mat-form-field>\n      <button\n        mat-button\n        type=\"submit\"\n        color=\"primary\"\n        [disabled]=\"!serviceForm.valid\"\n      >\n        Add\n      </button>\n    </form>\n    <cdk-virtual-scroll-viewport itemSize=\"50\" class=\"products\">\n      <div *ngFor=\"let product of products\" class=\"virtual-scrollbar\">\n        <div (click)=\"removeProduct(product)\">\n          <div class=\"product-label\">\n            <label><b>Name:</b> {{ product.name }}</label>\n            <label><b>Stock:</b> {{ product.stock }}</label>\n            <label><b>Price:</b> {{ product.price }}</label>\n            <label>\n              <b>{{ description }}:</b> {{ product.description }}\n            </label>\n            <mat-divider></mat-divider>\n          </div>\n        </div>\n      </div>\n    </cdk-virtual-scroll-viewport>\n  </mat-card>\n</div>\n<div class=\"card-buttons-container\">\n  <button mat-button color=\"primary\" (click)=\"back()\">Back</button>\n  <button\n    mat-button\n    color=\"primary\"\n    (click)=\"submit()\"\n    [disabled]=\"!isButtonEnabled\"\n  >\n    Create\n  </button>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { UserProfileComponent } from './user-profile/user-profile.component';\nimport { SummaryComponent } from './summary/summary.component';\nimport { OrderComponent } from './order/order.component';\nimport { AddServiceComponent } from './add-service/add-service.component';\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomeComponent,\n  },\n  {\n    path: 'login',\n    component: LoginComponent,\n  },\n  {\n    path: 'register',\n    component: RegisterComponent,\n  },\n  {\n    path: 'forgot',\n    component: ForgotPasswordComponent,\n  },\n  {\n    path: 'dashboard',\n    component: DashboardComponent,\n    children: [\n      { path: 'profile', component: UserProfileComponent },\n      { path: 'summary', component: SummaryComponent },\n      { path: 'order', component: OrderComponent },\n      { path: 'service', component: AddServiceComponent },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'delivery-app';\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n//Components\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { SummaryComponent } from './summary/summary.component';\nimport { OrderComponent } from './order/order.component';\nimport { AddServiceComponent } from './add-service/add-service.component';\nimport { DialogComponent } from './dialog/dialog.component';\nimport { TakeOrderComponent } from './take-order/take-order.component';\nimport { UserProfileComponent } from './user-profile/user-profile.component';\nimport { BillComponent } from './bill/bill.component';\n\n//Others\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { TextFieldModule } from '@angular/cdk/text-field';\nimport { GraphQLModule } from './graphql.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { AngularFireStorageModule, BUCKET } from '@angular/fire/storage';\nimport { AngularFireModule } from '@angular/fire';\nimport { environment } from '../environments/environment';\nimport { ChartsModule } from 'ng2-charts';\n//Angular Material Components\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { OrderDialogComponent } from './order-dialog/order-dialog.component';\nimport { LineChartComponent } from './line-chart/line-chart.component';\nimport { MatTableModule } from '@angular/material/table';\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    LoginComponent,\n    RegisterComponent,\n    DashboardComponent,\n    UserProfileComponent,\n    SummaryComponent,\n    OrderComponent,\n    AddServiceComponent,\n    DialogComponent,\n    TakeOrderComponent,\n    OrderDialogComponent,\n    LineChartComponent,\n    BillComponent,\n    ForgotPasswordComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatTableModule,\n    MatDialogModule,\n    TextFieldModule,\n    MatDividerModule,\n    ScrollingModule,\n    MatCheckboxModule,\n    MatProgressBarModule,\n    ChartsModule,\n    GraphQLModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    AngularFireStorageModule,\n    AngularFireModule.initializeApp(environment.firebaseConfig, 'cloud'),\n  ],\n  providers: [\n    {\n      provide: BUCKET,\n      useValue: 'delivery-app-73352.appspot.com',\n    },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import {\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport { PeriodicElement } from '../interfaces';\n\n@Component({\n  selector: 'app-bill',\n  templateUrl: './bill.component.html',\n  styleUrls: ['./bill.component.scss'],\n})\nexport class BillComponent implements OnInit {\n  @Input() products: Array<Object>;\n  @Input() client: string;\n  @Input() sender: string;\n  @Input() total: number;\n  @Input() loading: Boolean;\n  @Output() submitBill = new EventEmitter();\n  @Output() toggleBill = new EventEmitter();\n  @ViewChild('template') template: any;\n  constructor() {}\n\n  displayedColumns: string[] = ['Description', 'Amount', 'Unit Price', 'Total'];\n  dataSource: PeriodicElement[] = [];\n  date: string = new Date().toLocaleDateString();\n\n  submit(): void {\n    this.submitBill.emit();\n  }\n\n  back(): void {\n    this.toggleBill.emit();\n  }\n\n  ngOnInit(): void {\n    this.products.forEach((element: any) => {\n      this.dataSource.push({\n        description: element.description,\n        amount: element.amount,\n        unitPrice: element.price,\n        total: Number((element.amount * element.price).toFixed(2)),\n      });\n    });\n    this.dataSource.push({\n      description: 'Total',\n      total: this.total,\n    });\n  }\n}\n","<div id=\"bill\" #template>\n  <mat-progress-bar *ngIf=\"loading\" mode=\"indeterminate\"></mat-progress-bar>\n  <div class=\"bill-title\">\n    <h1>Bill Summary</h1>\n  </div>\n  <div class=\"bill-user-information\">\n    <div>\n      <h2>Client</h2>\n      <span>{{ client }}</span>\n    </div>\n    <div>\n      <h2>Emitted</h2>\n      <span>{{ date }}</span>\n    </div>\n    <div>\n      <h2>Sender</h2>\n      <span>{{ sender }}</span>\n    </div>\n  </div>\n  <table mat-table [dataSource]=\"dataSource\" class=\"bill-summary\">\n    <ng-container matColumnDef=\"Description\">\n      <th mat-header-cell *matHeaderCellDef>Description</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.description }}</td>\n    </ng-container>\n    <ng-container matColumnDef=\"Amount\">\n      <th mat-header-cell *matHeaderCellDef>Amount</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.amount }}</td>\n    </ng-container>\n    <ng-container matColumnDef=\"Unit Price\">\n      <th mat-header-cell *matHeaderCellDef>Unit Price</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.unitPrice }}</td>\n    </ng-container>\n    <ng-container matColumnDef=\"Total\">\n      <th mat-header-cell *matHeaderCellDef>Total</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.total }}</td>\n    </ng-container>\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n  </table>\n  <div class=\"bill-footer\">\n    <span>Thanks for your bought!</span>\n  </div>\n</div>\n<div class=\"bill-button\">\n  <button mat-button color=\"primary\" (click)=\"submit()\">Submit</button>\n  <button mat-button color=\"primary\" (click)=\"back()\">Back</button>\n</div>\n","import { Injectable } from '@angular/core';\nimport { TemplateParams } from './interfaces';\nimport { AngularFireStorage } from '@angular/fire/storage';\nimport { finalize } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { UploadTaskSnapshot } from '@angular/fire/storage/interfaces';\nimport { Order, TypeService, User, Service } from './types';\nimport emailjs from 'emailjs-com';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DashboardService {\n  typeService: TypeService[];\n  userData: User;\n  orders: Order[];\n  userId: string;\n  services: Service[];\n  editableService: Service;\n\n  uploadFile(file: any, username: string): Observable<UploadTaskSnapshot> {\n    let filePath: string;\n    filePath = `/ProfileImages/${username}-${new Date().toISOString()}`;\n    const fileRef = this.storage.ref(filePath);\n    const task = this.storage.upload(filePath, file);\n    const url = task.snapshotChanges().pipe(\n      finalize(() => {\n        return fileRef.getDownloadURL().subscribe((fileUrl) => {\n          return fileUrl;\n        });\n      })\n    );\n\n    return url;\n  }\n\n  sendEmail(templateParams: TemplateParams): void {\n    emailjs.send(\n      'delivery-app-service',\n      'template_smXCjRxC',\n      templateParams,\n      'user_eJv2ZcvYpPAAY03vAk0sV'\n    );\n  }\n\n  removeFile(fileUrl: string): void {\n    this.storage.storage.refFromURL(fileUrl).delete();\n  }\n\n  constructor(private storage: AngularFireStorage) {}\n}\n","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { Apollo } from 'apollo-angular';\n//import { GET_SERVICES } from '../queries/getServices';\nimport { GET_TYPE_SERVICE } from '../queries/getTypeServices';\nimport { LOGOUT } from '../mutations/logout';\nimport { Route, TypeServiceResponse, UserDataResponse } from '../interfaces';\nimport { Router } from '@angular/router';\nimport { NavItem } from '../interfaces';\nimport { DashboardService } from '../dashboard.service';\nimport jwt_decode from 'jwt-decode';\nimport { GET_USER_BY_ID } from '../queries/getUserById';\nimport { DialogComponent } from '../dialog/dialog.component';\nimport { MatDialog } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss'],\n})\nexport class DashboardComponent implements OnInit {\n  clicked: boolean = false;\n  route: Route;\n  navItems: NavItem[];\n  loading: boolean = false;\n  message: string;\n\n  constructor(\n    private apollo: Apollo,\n    private router: Router,\n    private service: DashboardService,\n    private dialog: MatDialog,\n    private detector: ChangeDetectorRef\n  ) {}\n\n  queryUserData(userId: string): void {\n    this.loading = true;\n    this.apollo\n      .query<UserDataResponse>({\n        query: GET_USER_BY_ID,\n        variables: { data: { _id: userId } },\n      })\n      .toPromise()\n      .then((response) => {\n        this.service.userData = response.data.getUserById;\n        this.setRoutes();\n        this.detector.markForCheck();\n        this.loading = false;\n      })\n      .catch(() => {\n        this.message = 'Something went wrong, please contact the support team';\n        this.dialog.open(DialogComponent, { data: this.message });\n      });\n  }\n\n  setRoutes(): void {\n    this.route =\n      this.service.userData.type === 'customer'\n        ? { name: 'New Order', route: 'order' }\n        : { name: 'New Service', route: 'service' };\n\n    this.navItems = [\n      {\n        displayName: 'Profile',\n        iconName: 'recent_actors',\n        route: 'profile',\n        action: this.nothing.bind(this),\n      },\n      {\n        displayName: 'Summary',\n        iconName: 'some',\n        route: 'summary',\n        action: this.nothing.bind(this),\n      },\n      {\n        displayName: this.route.name,\n        iconName: 'some-icon',\n        route: this.route.route,\n        action: this.nothing.bind(this),\n      },\n      {\n        displayName: 'Logout',\n        iconName: 'logout',\n        route: null,\n        action: this.logout.bind(this),\n      },\n    ];\n  }\n\n  nothing(): void {\n    null;\n  }\n\n  logout(): void {\n    this.apollo\n      .mutate({ mutation: LOGOUT })\n      .toPromise()\n      .then((res) => {\n        if (res) {\n          this.router.navigate(['login']);\n        } else {\n          this.dialog.open(DialogComponent, { data: 'Error loging out' });\n        }\n      })\n      .catch(() => {\n        this.dialog.open(DialogComponent, { data: 'Error loging out' });\n      });\n  }\n\n  ngOnInit(): void {\n    try {\n      const token = document.cookie.split('=')[1];\n      const payload = jwt_decode(token);\n      const userId = payload.userId._id;\n      this.service.userId = userId;\n      if (userId) {\n        if (this.service.userData === undefined) {\n          this.queryUserData(userId);\n        } else {\n          this.setRoutes();\n        }\n      } else {\n        this.router.navigate(['login']);\n      }\n    } catch (err) {\n      this.router.navigate(['login']);\n    }\n  }\n}\n","<mat-progress-bar *ngIf=\"loading\" mode=\"indeterminate\"></mat-progress-bar>\n<div *ngIf=\"!loading\" class=\"wrapper\">\n  <mat-toolbar>\n    <button mat-icon-button>\n      <mat-icon (click)=\"sidenav.toggle()\">Menu</mat-icon>\n    </button>\n  </mat-toolbar>\n  <mat-sidenav-container>\n    <mat-progress-bar *ngIf=\"loading\" mode=\"indeterminate\"></mat-progress-bar>\n    <mat-sidenav #sidenav class=\"sidenav\">\n      <mat-nav-list>\n        <a\n          mat-list-item\n          *ngFor=\"let item of navItems\"\n          [routerLink]=\"item.route\"\n          (click)=\"item.action()\"\n          >{{ item.displayName }}</a\n        >\n      </mat-nav-list>\n    </mat-sidenav>\n    <mat-sidenav-content>\n      <div class=\"container\">\n        <router-outlet width=\"100%\"></router-outlet>\n      </div>\n    </mat-sidenav-content>\n  </mat-sidenav-container>\n</div>\n","import { Component, OnInit, Inject, ViewChild } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-dialog',\n  templateUrl: './dialog.component.html',\n  styleUrls: ['./dialog.component.scss'],\n})\nexport class DialogComponent implements OnInit {\n  data: any;\n  constructor(@Inject(MAT_DIALOG_DATA) data) {\n    this.data = data;\n  }\n\n  ngOnInit(): void {}\n}\n","<mat-dialog-content>\n  {{ data }}\n</mat-dialog-content>\n<mat-dialog-actions align=\"center\">\n  <button mat-button color=\"primary\" mat-dialog-close>Close</button>\n</mat-dialog-actions>\n","import {\n  Component,\n  OnInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n} from '@angular/core';\nimport { Apollo } from 'apollo-angular';\nimport { RESET_PASSWORD } from '../mutations/resetPassword';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { REQUEST_RESET } from '../mutations/requestReset';\nimport { UPDATE_USER } from '../mutations/updateUser';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DialogComponent } from '../dialog/dialog.component';\nimport { RequestResetResponse } from '../interfaces';\nimport { User } from '../types';\nimport pick from 'lodash.pick';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ForgotPasswordComponent implements OnInit {\n  isRecovering: Boolean = false;\n  isCodeValid: Boolean = false;\n  user: User;\n  loading: Boolean = false;\n  constructor(\n    private apollo: Apollo,\n    private dialog: MatDialog,\n    private location: Location,\n    private detector: ChangeDetectorRef\n  ) {}\n\n  form = new FormGroup({\n    email: new FormControl(''),\n    code: new FormControl(''),\n  });\n\n  passwordForm = new FormGroup({\n    password: new FormControl('', [Validators.required]),\n    confirmPassword: new FormControl('', [Validators.required]),\n  });\n\n  reset(): void {\n    this.loading = true;\n    this.apollo\n      .mutate<RequestResetResponse>({\n        mutation: REQUEST_RESET,\n        variables: { email: this.form.value.email },\n      })\n      .toPromise()\n      .then((res) => {\n        console.log(res);\n        this.isRecovering = true;\n        this.user = res.data.requestReset.user;\n        this.loading = false;\n        this.detector.markForCheck();\n      })\n      .catch((err) => {\n        this.loading = false;\n        this.dialog.open(DialogComponent, {\n          data:\n            'There was an error requesting the reset code, please try again later or contact our support team!',\n        });\n      });\n  }\n\n  verifyCode(): void {\n    this.loading = false;\n    this.apollo\n      .mutate({\n        mutation: RESET_PASSWORD,\n        variables: { token: this.form.value.code },\n      })\n      .toPromise()\n      .then((res) => {\n        this.isCodeValid = true;\n        this.isRecovering = false;\n        this.detector.markForCheck();\n        this.loading = false;\n      })\n      .catch((err) => {\n        this.loading = false;\n        this.dialog.open(DialogComponent, {\n          data:\n            'There was an error verifying the reset code, please try again later or contact our support team!',\n        });\n      });\n  }\n\n  changePassword() {\n    console.log(this.user);\n    const password = this.passwordForm.value.password;\n    const confirm = this.passwordForm.value.confirmPassword;\n    if (password === confirm) {\n      this.loading = true;\n      const data = pick(this.user, [\n        'name',\n        'username',\n        'email',\n        'address',\n        'country',\n        'type',\n        'fileUrl',\n      ]);\n      const userData = { ...data, password };\n      this.apollo\n        .mutate({\n          mutation: UPDATE_USER,\n          variables: { where: { _id: this.user._id }, userData },\n        })\n        .toPromise()\n        .then(() => {\n          this.dialog.open(DialogComponent, {\n            data: 'Password changed successfully',\n          });\n          this.location.go('/login');\n          this.loading = false;\n        })\n        .catch(() => {\n          this.loading = false;\n          this.dialog.open(DialogComponent, {\n            data:\n              'There was an error updating the password, please try again later or contact our support team!',\n          });\n        });\n    } else {\n      this.dialog.open(DialogComponent, {\n        data: 'Confirm password must match!',\n      });\n    }\n  }\n\n  ngOnInit(): void {}\n}\n","<mat-progress-bar *ngIf=\"loading\" mode=\"indeterminate\"></mat-progress-bar>\n<div class=\"container\">\n  <div class=\"wrapper\">\n    <div class=\"image-wrapper\">\n      <a routerLink=\"/login\">\n        <img mat-card-image src=\"../../assets/logo.jpg\" alt=\"some logo\" />\n      </a>\n    </div>\n    <div *ngIf=\"!isCodeValid\">\n      <form [formGroup]=\"form\">\n        <div class=\"input-wrapper\" *ngIf=\"!isRecovering\">\n          <label>Enter email to reset password</label>\n          <mat-form-field>\n            <mat-label>Email</mat-label>\n            <input matInput type=\"text\" formControlName=\"email\" />\n          </mat-form-field>\n          <button mat-button (click)=\"reset()\">Recover</button>\n        </div>\n        <div class=\"input-wrapper\" *ngIf=\"isRecovering\">\n          <label>Check the code in your inbox</label>\n          <mat-form-field>\n            <mat-label>Code</mat-label>\n            <input matInput type=\"text\" formControlName=\"code\" />\n          </mat-form-field>\n          <button mat-button (click)=\"verifyCode()\">Recover</button>\n        </div>\n      </form>\n    </div>\n    <div *ngIf=\"isCodeValid\">\n      <form [formGroup]=\"passwordForm\" (submit)=\"changePassword()\">\n        <div class=\"input-wrapper\">\n          <label>Change your password</label>\n          <mat-form-field>\n            <mat-label>Enter password</mat-label>\n            <input matInput type=\"password\" formControlName=\"password\" />\n          </mat-form-field>\n          <mat-form-field>\n            <mat-label>Confirm password</mat-label>\n            <input matInput type=\"password\" formControlName=\"confirmPassword\" />\n          </mat-form-field>\n          <button type=\"submit\" mat-button>Change</button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { APOLLO_OPTIONS, Apollo } from 'apollo-angular';\nimport { HttpLinkModule, HttpLink } from 'apollo-angular-link-http';\nimport { ApolloLink, from, fromPromise, Observable, concat } from 'apollo-link';\nimport { onError } from 'apollo-link-error';\nimport emailjs, { EmailJSResponseStatus } from 'emailjs-com';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { getAccessToken, setAccessToken } from './utils';\n//import { TokenRefreshLink } from 'apollo-link-token-refresh';\n//import jwtDecode from 'jwt-decode';\n\nexport function createApollo(httpLink: HttpLink) {\n  const uri = 'http://localhost:4000'; // <-- add the URL of the GraphQL server here\n  const errorLink = onError(({ graphQLErrors, networkError }) => {\n    if (graphQLErrors) {\n      for (let err of graphQLErrors) {\n        if (err.message.split(':')[1].split(' ')[1] !== 'Invalid') {\n          const templateParams = {\n            from_name: 'eliasalejo01@gmail.com',\n            to_name: 'eliasalejo01@gmail.com',\n            subject: 'Error in delivery app',\n            message_html: `There is a GraphQL error in delivery application: ${err.message}, location: ${err.locations} - ${err.path}`,\n          };\n\n          emailjs\n            .send(\n              'delivery-app-service',\n              'template_smXCjRxC',\n              templateParams,\n              'user_eJv2ZcvYpPAAY03vAk0sV'\n            )\n            .then((result: EmailJSResponseStatus) => {\n              console.log(result.text);\n            }),\n            (error: any) => {\n              console.log(error.text);\n            };\n        }\n      }\n    }\n    if (networkError) {\n      const templateParams = {\n        from_name: 'eliasalejo01@gmail.com',\n        to_name: 'eliasalejo01@gmail.com',\n        subject: 'Error in delivery app',\n        message_html: `There is a network error: ${networkError.message}`,\n      };\n\n      emailjs\n        .send(\n          'delivery-app-service',\n          'template_smXCjRxC',\n          templateParams,\n          'user_eJv2ZcvYpPAAY03vAk0sV'\n        )\n        .then((result: EmailJSResponseStatus) => {\n          console.log(result.text);\n        }),\n        (error: any) => {\n          console.log(error.text);\n        };\n    }\n  });\n\n  const authMiddleware = new ApolloLink((operation: any, forward: any) => {\n    const accessToken = getAccessToken();\n    if (accessToken) {\n      operation.setContext({\n        headers: {\n          authentication: `bearer ${accessToken}`,\n        },\n      });\n    }\n    return forward(operation);\n  });\n\n  const endpoint = httpLink.create({\n    uri,\n    withCredentials: true,\n  });\n\n  return {\n    link: from([authMiddleware, errorLink, endpoint]),\n    cache: new InMemoryCache(),\n  };\n}\n\n@NgModule({\n  exports: [HttpLinkModule],\n  providers: [\n    {\n      provide: APOLLO_OPTIONS,\n      useFactory: createApollo,\n      deps: [HttpLink],\n    },\n  ],\n})\nexport class GraphQLModule {\n  constructor() {}\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport jwt_decode from 'jwt-decode';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent implements OnInit {\n  constructor(private router: Router) {}\n\n  ngOnInit(): void {\n    try {\n      const token = document.cookie.split('=')[1];\n      const payload = jwt_decode(token);\n      const userId = payload.userId._id;\n      if (userId) {\n        this.router.navigate(['dashboard/summary']);\n      }\n    } catch (err) {\n      null;\n    }\n  }\n}\n","<div class=\"container\">\n  <mat-toolbar class=\"toolbar\" color=\"accent\">\n    <div class=\"toolbar-logo\">\n      <img alt=\"some logo\" src=\"../../assets/logo.jpg\" />\n    </div>\n    <div class=\"toolbar-title\">\n      <h2>Don't go out</h2>\n    </div>\n    <div class=\"toolbar-buttons\">\n      <a routerLink=\"/login\">\n        <button mat-button color=\"primary\">Sign In</button>\n      </a>\n      <a routerLink=\"/register\">\n        <button mat-button color=\"primary\">Sign Up</button>\n      </a>\n    </div>\n  </mat-toolbar>\n  <div class=\"page\">\n    <section>\n      <div class=\"wrapper\">\n        <div class=\"text\">\n          <h2>Why going out to do the shopping?</h2>\n          <h3>\n            When you can stay in your home and wait to someone to delivery it to\n            you\n          </h3>\n          <h3>Order online now!</h3>\n        </div>\n        <div class=\"buttons\">\n          <a routerLink=\"/login\">\n            <button mat-button color=\"accent\">Sign In</button>\n          </a>\n          <a routerLink=\"/register\">\n            <button mat-button color=\"accent\">Sign Up</button>\n          </a>\n        </div>\n      </div>\n    </section>\n  </div>\n  <div class=\"footer\">\n    <div class=\"info\">\n      <h2>Contact Info</h2>\n      <p>email@email.com</p>\n      <p>1-541-000-0000</p>\n    </div>\n    <div class=\"footer-logo\">\n      <img alt=\"some logo\" src=\"../../assets/logo.jpg\" />\n    </div>\n  </div>\n</div>\n","import { Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { ChartDataSets, ChartOptions, ChartType } from 'chart.js';\nimport { Color, BaseChartDirective, Label } from 'ng2-charts';\nimport { DateArray } from '../interfaces';\n\n@Component({\n  selector: 'app-line-chart',\n  templateUrl: './line-chart.component.html',\n  styleUrls: ['./line-chart.component.scss'],\n})\nexport class LineChartComponent implements OnInit {\n  @Input() allOrders: DateArray;\n  @Input() pendingOrders: DateArray;\n  @Input() completedOrders: DateArray;\n  @Input() chartLabels: string[] = [];\n  lineChartData: ChartDataSets[] = [\n    { data: [], label: 'All Orders' },\n    { data: [], label: 'Pending Orders' },\n    {\n      data: [],\n      label: 'Completed Orders',\n    },\n  ];\n  lineChartLabels: Label[];\n  lineChartOptions: ChartOptions = {\n    responsive: true,\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            beginAtZero: true,\n            stepSize: 1,\n          },\n        },\n      ],\n    },\n  };\n  lineChartColors: Color[] = [\n    {\n      backgroundColor: 'rgba(148,159,177,0.2)',\n      borderColor: 'rgba(148,159,177,1)',\n      pointBackgroundColor: 'rgba(148,159,177,1)',\n      pointBorderColor: '#fff',\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: 'rgba(148,159,177,0.8)',\n    },\n    {\n      backgroundColor: 'rgba(77,83,96,0.2)',\n      borderColor: 'rgba(77,83,96,1)',\n      pointBackgroundColor: 'rgba(77,83,96,1)',\n      pointBorderColor: '#fff',\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: 'rgba(77,83,96,1)',\n    },\n    {\n      backgroundColor: 'rgba(255,0,0,0.3)',\n      borderColor: 'red',\n      pointBackgroundColor: 'rgba(148,159,177,1)',\n      pointBorderColor: '#fff',\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: 'rgba(148,159,177,0.8)',\n    },\n  ];\n  lineChartLegend = true;\n  lineChartType: ChartType = 'line';\n  lineChartPlugins = [];\n\n  @ViewChild(BaseChartDirective, { static: true }) chart: BaseChartDirective;\n\n  constructor() {}\n\n  ngOnInit(): void {\n    this.lineChartLabels = this.chartLabels;\n    this.chartLabels.forEach((month) => {\n      this.lineChartData[0].data.push(this.allOrders[month]);\n      this.lineChartData[1].data.push(this.pendingOrders[month]);\n      this.lineChartData[2].data.push(this.completedOrders[month]);\n    });\n  }\n}\n","<div class=\"chart-wrapper\">\n  <canvas\n    baseChart\n    [datasets]=\"lineChartData\"\n    [labels]=\"lineChartLabels\"\n    [options]=\"lineChartOptions\"\n    [colors]=\"lineChartColors\"\n    [legend]=\"lineChartLegend\"\n    [chartType]=\"lineChartType\"\n    [plugins]=\"lineChartPlugins\"\n  >\n  </canvas>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { UserDataResponse, LoginResponse } from '../interfaces';\nimport { GET_USER_BY_ID } from '../queries/getUserById';\nimport { LOGIN } from '../mutations/login';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Apollo } from 'apollo-angular';\nimport { Router } from '@angular/router';\nimport { DashboardService } from '../dashboard.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DialogComponent } from '../dialog/dialog.component';\nimport { setAccessToken } from '../utils';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n  openDialog: boolean = false;\n  message: string;\n  loading: boolean = false;\n\n  loginForm = new FormGroup({\n    username: new FormControl('', [Validators.required]),\n    password: new FormControl('', [\n      Validators.required,\n      Validators.minLength(6),\n    ]),\n  });\n\n  constructor(\n    private router: Router,\n    private apollo: Apollo,\n    private service: DashboardService,\n    private dialog: MatDialog\n  ) {}\n\n  login(): void {\n    this.loading = true;\n    this.apollo\n      .mutate<LoginResponse>({\n        mutation: LOGIN,\n        variables: {\n          username: this.loginForm.value.username,\n          password: this.loginForm.value.password,\n        },\n      })\n      .toPromise()\n      .then((response) => {\n        if (response.data.login.accessToken) {\n          setAccessToken(response.data.login.accessToken);\n          this.apollo\n            .query<UserDataResponse>({\n              query: GET_USER_BY_ID,\n              variables: { data: { _id: response.data.login.user._id } },\n            })\n            .toPromise()\n            .then((res) => {\n              if (res.data.getUserById) {\n                this.service.userData = res.data.getUserById;\n                this.router.navigate(['dashboard/summary']);\n              } else {\n                this.message =\n                  'Something went wrong, please contact the support team';\n                this.dialog.open(DialogComponent, { data: this.message });\n              }\n              this.loading = false;\n            });\n        }\n      })\n      .catch((err) => {\n        this.loading = false;\n        const error = err.message.split(':')[1];\n        this.dialog.open(DialogComponent, {\n          data: error,\n        });\n      });\n  }\n\n  ngOnInit(): void {}\n}\n","<mat-progress-bar *ngIf=\"loading\" mode=\"indeterminate\"></mat-progress-bar>\n<div class=\"container\">\n  <div class=\"wrapper\">\n    <div class=\"image-wrapper\">\n      <a routerLink=\"/\">\n        <img mat-card-image src=\"../../assets/logo.jpg\" alt=\"some logo\" />\n      </a>\n    </div>\n    <form class=\"input-wrapper\" [formGroup]=\"loginForm\" (ngSubmit)=\"login()\">\n      <mat-form-field>\n        <mat-label>Username</mat-label>\n        <input matInput type=\"text\" formControlName=\"username\" />\n      </mat-form-field>\n      <mat-form-field>\n        <mat-label>Password</mat-label>\n        <input matInput type=\"password\" formControlName=\"password\" />\n      </mat-form-field>\n      <div class=\"button-wrapper\">\n        <button\n          type=\"submit\"\n          mat-button\n          color=\"primary\"\n          [disabled]=\"!loginForm.valid\"\n        >\n          Login\n        </button>\n        <a routerLink=\"/forgot\">\n          <button mat-button color=\"primary\">Forgot password?</button>\n        </a>\n        <a routerLink=\"/register\">\n          <button mat-button color=\"primary\">Not registered yet?</button>\n        </a>\n      </div>\n    </form>\n  </div>\n</div>\n","import gql from 'graphql-tag';\n\nexport const CREATE_ORDER = gql`\n  mutation createOrder($orderData: OrderData!) {\n    createOrder(orderData: $orderData) {\n      _id\n      emited\n    }\n  }\n`;\n","import gql from 'graphql-tag';\n\nexport const CREATE_PRODUCT = gql`\n  mutation createProduct($productData: ProductData!) {\n    createProduct(productData: $productData) {\n      _id\n      name\n    }\n  }\n`;\n","import gql from 'graphql-tag';\n\nexport const CREATE_SERVICE = gql`\n  mutation createService($serviceData: ServiceData!) {\n    createService(serviceData: $serviceData) {\n      _id\n    }\n  }\n`;\n","import gql from 'graphql-tag';\n\nexport const CREATE_USER = gql`\n  mutation createUser($userData: UserData!) {\n    createUser(userData: $userData) {\n      _id\n      name\n      username\n      email\n      password\n      type\n      address\n      country\n      fileUrl\n    }\n  }\n`;\n","import gql from 'graphql-tag';\n\nexport const DELETE_PRODUCT = gql`\n  mutation deleteProduct(\n    $data: ProductWhereUniqueData!\n    $service: ProductWhereServiceData!\n  ) {\n    deleteProduct(where: $data, service: $service)\n  }\n`;\n","import gql from 'graphql-tag';\n\nexport const LOGIN = gql`\n  mutation login($username: String!, $password: String!) {\n    login(username: $username, password: $password) {\n      accessToken\n      user {\n        _id\n      }\n    }\n  }\n`;\n","import gql from 'graphql-tag';\n\nexport const LOGOUT = gql`\n  mutation logout {\n    logout\n  }\n`;\n","import gql from 'graphql-tag';\n\nexport const REQUEST_RESET = gql`\n  mutation requestReset($email: String!) {\n    requestReset(email: $email) {\n      user {\n        _id\n        name\n        username\n        password\n        address\n        email\n        type\n        country\n        fileUrl\n      }\n    }\n  }\n`;\n","import gql from 'graphql-tag';\n\nexport const RESET_PASSWORD = gql`\n  mutation resetPassword($token: String!) {\n    resetPassword(token: $token)\n  }\n`;\n","import gql from 'graphql-tag';\n\nexport const UPDATE_ORDER = gql`\n  mutation updateOrder($where: OrderWhereUniqueData!, $orderData: OrderData!) {\n    updateOrder(where: $where, orderData: $orderData) {\n      _id\n      emited\n      status\n    }\n  }\n`;\n","import gql from 'graphql-tag';\n\nexport const UPDATE_PRODUCT = gql`\n  mutation updateProduct($productData: ProductData!) {\n    updateProduct(productData: $productData)\n  }\n`;\n","import gql from 'graphql-tag';\n\nexport const UPDATE_USER = gql`\n  mutation updateUser(\n    $where: UserWhereUniqueData!\n    $userData: UserData!\n    $currentPassword: String!\n  ) {\n    updateUser(\n      where: $where\n      userData: $userData\n      currentPassword: $currentPassword\n    ) {\n      _id\n      name\n      username\n      email\n      password\n      type\n      address\n      country\n      fileUrl\n    }\n  }\n`;\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Apollo } from 'apollo-angular';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { UPDATE_ORDER } from '../mutations/updateOrder';\nimport { Order, Product } from '../types';\nimport pick from 'lodash.pick';\n\n@Component({\n  selector: 'app-order-dialog',\n  templateUrl: './order-dialog.component.html',\n  styleUrls: ['./order-dialog.component.scss'],\n})\nexport class OrderDialogComponent implements OnInit {\n  data: Order;\n  products: Product[];\n  isError: Boolean = false;\n  errorMessage: string;\n\n  statuses: any = [\n    { value: 'In process', viewValue: 'In process' },\n    { value: 'Completed', viewValue: 'Completed' },\n    { value: 'Canceled', viewValue: 'Canceled' },\n  ];\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) data: any,\n    private apollo: Apollo,\n    private dialogRef: MatDialogRef<OrderDialogComponent>\n  ) {\n    this.data = data.order;\n    this.products = data.products;\n    this.orderForm.controls['address'].setValue(this.data.address);\n    this.orderForm.controls['status'].setValue(this.data.status);\n  }\n\n  orderForm = new FormGroup({\n    address: new FormControl('', [Validators.required]),\n    status: new FormControl('', [Validators.required]),\n  });\n\n  update(): void {\n    const data = pick(this.data, [\n      'business',\n      'emited',\n      'price',\n      'products',\n      'service',\n      'user',\n    ]);\n    const withAddress = { ...data, address: this.orderForm.value.address };\n    const orderData = { ...withAddress, status: this.orderForm.value.status };\n    this.apollo\n      .mutate({\n        mutation: UPDATE_ORDER,\n        variables: {\n          where: { _id: this.data._id },\n          orderData,\n        },\n      })\n      .toPromise()\n      .then(() => {\n        this.isError = false;\n        this.dialogRef.close();\n      })\n      .catch(() => {\n        this.errorMessage = 'There was an error updating the order';\n        this.isError = true;\n      });\n  }\n\n  ngOnInit(): void {}\n}\n","<mat-dialog-content>\n  <form [formGroup]=\"orderForm\" class=\"order-dialog-form\">\n    <mat-form-field>\n      <mat-label>Address</mat-label>\n      <input\n        matInput\n        type=\"text\"\n        value=\"data.address\"\n        formControlName=\"address\"\n      />\n    </mat-form-field>\n    <mat-form-field>\n      <mat-label>Order Status</mat-label>\n      <mat-select formControlName=\"status\">\n        <mat-option *ngFor=\"let status of statuses\" [value]=\"status.value\">\n          {{ status.viewValue }}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n    <span>Products</span>\n    <cdk-virtual-scroll-viewport itemSize=\"50\" class=\"order-products-scroll\">\n      <div *ngFor=\"let product of products\">\n        <ul>\n          <li>\n            {{ product.name }}\n          </li>\n        </ul>\n      </div>\n    </cdk-virtual-scroll-viewport>\n  </form>\n</mat-dialog-content>\n<div *ngIf=\"isError\" class=\"error\">\n  <span>{{ errorMessage }}</span>\n</div>\n<mat-dialog-actions align=\"center\">\n  <button mat-button color=\"primary\" mat-dialog-close>Close</button>\n  <button mat-button color=\"primary\" (click)=\"update()\">Update Order</button>\n</mat-dialog-actions>\n","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { DashboardService } from '../dashboard.service';\nimport { Apollo } from 'apollo-angular';\nimport { GET_SERVICES_BY_TYPE } from '../queries/getServicesByType';\nimport { GET_PRODUCTS_BY_IDS } from '../queries/getProductsById';\nimport { GET_USER_BY_ID } from '../queries/getUserById';\nimport {\n  ServiceDataResponse,\n  ProductDataResponse,\n  UserDataResponse,\n} from '../interfaces';\nimport { GET_TYPE_SERVICE } from '../queries/getTypeServices';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { TypeServiceResponse } from '../interfaces';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DialogComponent } from '../dialog/dialog.component';\n\n@Component({\n  selector: 'app-order',\n  templateUrl: './order.component.html',\n  styleUrls: ['./order.component.scss'],\n})\nexport class OrderComponent implements OnInit {\n  typeServices: any;\n  selectedType: boolean = false;\n  selectedService: boolean = false;\n  takeOrder: boolean = false;\n  servicesData: any;\n  orderData: any;\n  loading: Boolean = false;\n\n  orderForm = new FormGroup({\n    typeService: new FormControl(''),\n  });\n\n  constructor(\n    private service: DashboardService,\n    private apollo: Apollo,\n    private detector: ChangeDetectorRef,\n    private dialog: MatDialog\n  ) {}\n\n  ngOnInit(): void {\n    this.loading = true;\n    // this.typeServices = this.service.typeService;\n    this.apollo\n      .query<TypeServiceResponse>({ query: GET_TYPE_SERVICE })\n      .toPromise()\n      .then((res) => {\n        this.typeServices = res.data.getTypeOfService;\n        this.loading = false;\n        this.detector.markForCheck();\n      })\n      .catch(() => {\n        this.dialog.open(DialogComponent, {\n          data: 'There was an error, please contact support team',\n        });\n      });\n  }\n\n  selectType(): void {\n    this.selectedType = true;\n    this.apollo\n      .query<ServiceDataResponse>({\n        query: GET_SERVICES_BY_TYPE,\n        variables: { type: this.orderForm.value.typeService },\n      })\n      .subscribe((response) => {\n        this.servicesData = response.data.getServiceByType;\n        this.detector.markForCheck();\n      });\n  }\n\n  onSelectService(data: any): void {\n    this.loading = true;\n    this.selectedService = true;\n\n    this.apollo\n      .query<UserDataResponse>({\n        query: GET_USER_BY_ID,\n        variables: { data: { _id: data.user } },\n      })\n      .subscribe((res) => {\n        const productData = {\n          _id: data.products,\n        };\n        this.apollo\n          .query<ProductDataResponse>({\n            query: GET_PRODUCTS_BY_IDS,\n            variables: { products: productData },\n          })\n          .subscribe((response) => {\n            this.orderData = {\n              service: data,\n              user: res.data.getUserById,\n              products: response.data.getProductsById,\n            };\n            this.loading = false;\n            this.takeOrder = true;\n            this.detector.markForCheck();\n          });\n      });\n  }\n\n  toggleTakeOrder(status: boolean): void {\n    this.takeOrder = status;\n  }\n\n  ngOnDestroy(): void {\n    this.selectedType = false;\n    this.selectedService = false;\n  }\n}\n","<mat-progress-bar mode=\"indeterminate\" *ngIf=\"loading\"></mat-progress-bar>\n<div class=\"container\">\n  <div *ngIf=\"!takeOrder\">\n    <div class=\"select-container\">\n      <mat-card>\n        <form class=\"take-order-form\" [formGroup]=\"orderForm\">\n          <mat-form-field>\n            <mat-label>Type of service</mat-label>\n            <mat-select\n              class=\"form-select\"\n              formControlName=\"typeService\"\n              (selectionChange)=\"selectType()\"\n            >\n              <mat-option\n                *ngFor=\"let service of typeServices\"\n                [value]=\"service.name\"\n              >\n                {{ service.name }}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n        </form>\n      </mat-card>\n    </div>\n    <div *ngIf=\"selectedType\" class=\"services-container\">\n      <h3>Select service</h3>\n      <div class=\"services-card-container\" fxLayoutGap=\"10px\">\n        <div\n          *ngFor=\"let service of servicesData\"\n          class=\"services\"\n          (click)=\"onSelectService(service)\"\n        >\n          <mat-card class=\"services-card\">\n            <mat-card-header>\n              <mat-card-title>Name</mat-card-title>\n            </mat-card-header>\n            <mat-label>{{ service.name }}</mat-label>\n            <mat-card-header>\n              <mat-card-title>Description</mat-card-title>\n            </mat-card-header>\n            <mat-label>{{ service.description }}</mat-label>\n          </mat-card>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div *ngIf=\"takeOrder\" class=\"take-order\">\n    <app-take-order\n      [orderData]=\"orderData\"\n      (return)=\"toggleTakeOrder($event)\"\n    ></app-take-order>\n  </div>\n</div>\n","import gql from 'graphql-tag';\n\nexport const GET_ORDERS_BY_USER = gql`\n  query getOrdersByUser($userID: String!) {\n    getOrdersByUser(userID: $userID) {\n      _id\n      address\n      emited\n      service\n      price\n      status\n      products\n      user\n      business\n      # fileUrl\n    }\n  }\n`;\n","import gql from 'graphql-tag';\n\nexport const GET_PRODUCTS_BY_IDS = gql`\n  query getProducts($products: ProductWhereUniqueData!) {\n    getProductsById(data: $products) {\n      _id\n      name\n      description\n      stock\n      price\n    }\n  }\n`;\n","import gql from 'graphql-tag';\n\nexport const GET_SERVICES = gql`\n  query getServiceByUser($userID: String!) {\n    getServiceByUser(userID: $userID) {\n      _id\n      name\n      description\n      user\n      type\n      products\n    }\n  }\n`;\n","import gql from 'graphql-tag';\n\nexport const GET_SERVICES_BY_TYPE = gql`\n  query getServiceByType($type: String!) {\n    getServiceByType(type: $type) {\n      _id\n      name\n      description\n      user\n      type\n      products\n    }\n  }\n`;\n","import gql from 'graphql-tag';\n\nexport const GET_TYPE_SERVICE = gql`\n  query getTypeOfService {\n    getTypeOfService {\n      name\n    }\n  }\n`;\n","import gql from 'graphql-tag';\n\nexport const GET_USER_BY_ID = gql`\n  query getUserById($data: UserWhereUniqueData!) {\n    getUserById(data: $data) {\n      _id\n      username\n      name\n      email\n      address\n      type\n      country\n      fileUrl\n    }\n  }\n`;\n","import { Component, OnInit } from '@angular/core';\nimport { Apollo } from 'apollo-angular';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { CREATE_USER } from '../mutations/createUser';\nimport { UserType, UserDataResponse } from '../interfaces';\nimport { User } from '../types';\nimport { Router } from '@angular/router';\nimport { DashboardService } from '../dashboard.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DialogComponent } from '../dialog/dialog.component';\nimport pick from 'lodash.pick';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss'],\n})\nexport class RegisterComponent implements OnInit {\n  types: UserType[] = [\n    { value: 'customer', viewValue: 'Customer' },\n    { value: 'business', viewValue: 'Business' },\n  ];\n\n  imageUrl: any = '../../assets/logo.jpg';\n  loading: boolean = false;\n\n  userData: User;\n\n  userForm = new FormGroup({\n    file: new FormControl('', [Validators.required]),\n    name: new FormControl('', [Validators.required]),\n    username: new FormControl('', [\n      Validators.required,\n      Validators.minLength(4),\n    ]),\n    password: new FormControl('', [\n      Validators.required,\n      Validators.minLength(6),\n    ]),\n    address: new FormControl('', [Validators.required]),\n    email: new FormControl('', [Validators.required, Validators.email]),\n    country: new FormControl('', [Validators.required]),\n    type: new FormControl('', [Validators.required]),\n  });\n\n  constructor(\n    private apollo: Apollo,\n    private router: Router,\n    private service: DashboardService,\n    private dialog: MatDialog\n  ) {}\n\n  onChangeFile(event: any): void {\n    const reader = new FileReader();\n    this.userForm.controls['file'].setValue(event.target.files);\n    reader.readAsDataURL(this.userForm.value.file[0]);\n    reader.onload = () => {\n      this.imageUrl = reader.result;\n    };\n  }\n\n  register(): void {\n    if (this.imageUrl != '../../assets/logo.jpg') {\n      this.loading = true;\n\n      this.service\n        .uploadFile(this.userForm.value.file[0], this.userForm.value.username)\n        .toPromise()\n        .then((e) => {\n          this.loading = true;\n          e.ref.getDownloadURL().then((value) => {\n            const data = pick(this.userForm.value, [\n              'name',\n              'username',\n              'email',\n              'password',\n              'country',\n              'type',\n              'address',\n            ]);\n            const userData = {\n              ...data,\n              fileUrl: value,\n            };\n            this.apollo\n              .mutate<UserDataResponse>({\n                mutation: CREATE_USER,\n                variables: { userData: userData },\n              })\n              .toPromise()\n              .then((response) => {\n                if (response.data) {\n                  this.loading = false;\n                  this.dialog.open(DialogComponent, {\n                    data: 'Úser registered successfully',\n                  });\n                  this.service.userData = response.data.createUser;\n                  this.router.navigate(['dashboard']);\n                }\n              })\n              .catch(() => {\n                this.loading = false;\n                this.service.removeFile(value);\n                this.dialog.open(DialogComponent, {\n                  data:\n                    'Something went wrong creating the user, please contact the support team',\n                });\n              });\n          });\n        })\n        .catch(() => {\n          this.loading = false;\n          this.dialog.open(DialogComponent, {\n            data:\n              'Something went wrong loading the image, please contact the support team',\n          });\n        });\n    } else {\n      this.dialog.open(DialogComponent, { data: 'Must load a profile photo!' });\n    }\n  }\n\n  ngOnInit(): void {}\n}\n","<mat-progress-bar *ngIf=\"loading\" mode=\"indeterminate\"></mat-progress-bar>\n<div class=\"container\">\n  <div class=\"wrapper\">\n    <div class=\"image-wrapper\">\n      <img mat-card-image [src]=\"imageUrl\" (click)=\"fileInput.click()\" />\n      <input\n        #fileInput\n        type=\"file\"\n        class=\"file-input\"\n        accept=\"image/*\"\n        (change)=\"onChangeFile($event)\"\n      />\n    </div>\n    <h4 class=\"photo-text\" (click)=\"fileInput.click()\">Add profile photo</h4>\n    <form class=\"input-wrapper\" [formGroup]=\"userForm\" (ngSubmit)=\"register()\">\n      <mat-form-field>\n        <mat-label>Name</mat-label>\n        <input matInput formControlName=\"name\" />\n      </mat-form-field>\n      <mat-form-field>\n        <mat-label>Username</mat-label>\n        <input matInput formControlName=\"username\" />\n      </mat-form-field>\n      <mat-form-field>\n        <mat-label>Email</mat-label>\n        <input matInput type=\"email\" formControlName=\"email\" />\n      </mat-form-field>\n      <mat-form-field>\n        <mat-label>Password</mat-label>\n        <input matInput type=\"password\" formControlName=\"password\" />\n      </mat-form-field>\n      <mat-form-field>\n        <mat-label>Type of User</mat-label>\n        <mat-select formControlName=\"type\">\n          <mat-option *ngFor=\"let type of types\" [value]=\"type.value\">\n            {{ type.viewValue }}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n      <mat-form-field>\n        <mat-label>Country</mat-label>\n        <input matInput formControlName=\"country\" />\n      </mat-form-field>\n      <mat-form-field>\n        <mat-label>Address</mat-label>\n        <input matInput formControlName=\"address\" />\n      </mat-form-field>\n      <div class=\"button-wrapper\">\n        <button\n          type=\"submit\"\n          mat-button\n          color=\"primary\"\n          [disabled]=\"!userForm.valid\"\n        >\n          Register\n        </button>\n        <a routerLink=\"/login\">\n          <button mat-button color=\"primary\">Already have account?</button>\n        </a>\n        <a routerLink=\"/\">\n          <button mat-button color=\"primary\">Back</button>\n        </a>\n      </div>\n    </form>\n  </div>\n</div>\n","import { ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\nimport { DashboardService } from '../dashboard.service';\nimport { Router } from '@angular/router';\nimport { Order, Service, User } from '../types';\nimport { Apollo } from 'apollo-angular';\nimport { MatDialog } from '@angular/material/dialog';\nimport { OrderDialogComponent } from '../order-dialog/order-dialog.component';\nimport { BaseChartDirective } from 'ng2-charts';\nimport { GET_PRODUCTS_BY_IDS } from '../queries/getProductsById';\nimport {\n  ProductDataResponse,\n  DateArray,\n  ServiceDataResponse,\n  OrderDataResponse,\n} from '../interfaces';\nimport { DialogComponent } from '../dialog/dialog.component';\nimport { ChartData } from 'chart.js';\nimport { GET_SERVICES } from '../queries/getServices';\nimport { GET_ORDERS_BY_USER } from '../queries/getOrdersByUser';\n\n@Component({\n  selector: 'app-summary',\n  templateUrl: './summary.component.html',\n  styleUrls: ['./summary.component.scss'],\n})\nexport class SummaryComponent implements OnInit {\n  @ViewChild(BaseChartDirective, { static: true }) chart: BaseChartDirective;\n  constructor(\n    private service: DashboardService,\n    private router: Router,\n    private apollo: Apollo,\n    private dialog: MatDialog,\n    private detector: ChangeDetectorRef\n  ) {}\n  userData: User;\n  orders: Order[];\n  services: Service[];\n  isButtonVisible: Boolean;\n  isBusiness: Boolean;\n  loading: Boolean = false;\n  chartData: ChartData;\n  pendingOrders: Order[] = [];\n  allOrdersMap: DateArray = {};\n  pendingOrdersMap: DateArray = {};\n  completedOrdersMap: DateArray = {};\n  chartLabels: string[];\n  completed: Boolean = false;\n\n  editUserInfo(): void {\n    this.router.navigate(['dashboard/profile']);\n  }\n\n  newOrder(): void {\n    this.router.navigate(['dashboard/order']);\n  }\n\n  editService(serviceData: Service): void {\n    this.service.editableService = serviceData;\n    this.router.navigate(['dashboard/service']);\n  }\n\n  newService(): void {\n    this.router.navigate(['dashboard/service']);\n  }\n\n  openOrder(order: Order): void {\n    this.loading = true;\n    this.apollo\n      .query<ProductDataResponse>({\n        query: GET_PRODUCTS_BY_IDS,\n        variables: { products: { _id: order.products } },\n      })\n      .toPromise()\n      .then((response) => {\n        this.loading = false;\n        this.dialog.open(OrderDialogComponent, {\n          data: { order: order, products: response.data.getProductsById },\n        });\n      })\n      .catch(() => {\n        this.loading = false;\n        this.dialog.open(DialogComponent, {\n          data:\n            'There was an error querying the products, please contact the support team!',\n        });\n      });\n  }\n\n  ngOnInit(): void {\n    const months = [\n      'Jan',\n      'Feb',\n      'Mar',\n      'Apr',\n      'May',\n      'Jun',\n      'Jul',\n      'Aug',\n      'Sep',\n      'Oct',\n      'Nov',\n      'Dec',\n    ];\n\n    if (this.service.userData.type === 'business') {\n      this.isBusiness = true;\n      this.apollo\n        .query<ServiceDataResponse>({\n          query: GET_SERVICES,\n          variables: { userID: this.service.userId },\n        })\n        .subscribe((response) => {\n          this.service.services = response.data.getServiceByUser;\n          this.services = this.service.services;\n          this.detector.markForCheck();\n        });\n    } else {\n      this.isBusiness = false;\n    }\n\n    this.apollo\n      .query<OrderDataResponse>({\n        query: GET_ORDERS_BY_USER,\n        variables: { userID: this.service.userId },\n      })\n      .subscribe((res) => {\n        this.service.orders = res.data.getOrdersByUser;\n        this.orders = this.service.orders;\n        this.pendingOrders = this.orders.filter(\n          (e) => e.status === 'In process'\n        );\n        const completedOrders = this.orders.filter(\n          (e) => e.status === 'Completed'\n        );\n\n        months.forEach((value) => {\n          this.allOrdersMap[value] = 0;\n          this.pendingOrdersMap[value] = 0;\n          this.completedOrdersMap[value] = 0;\n        });\n        this.orders.forEach((value) => {\n          const month = Number(value.emited.toString().split('-')[1]);\n          this.allOrdersMap[months[month - 1]] += 1;\n        });\n        this.pendingOrders.forEach((value) => {\n          const month = Number(value.emited.toString().split('-')[1]);\n          this.pendingOrdersMap[months[month - 1]] += 1;\n        });\n\n        completedOrders.forEach((value) => {\n          const month = Number(value.emited.toString().split('-')[1]);\n          this.completedOrdersMap[months[month - 1]] += 1;\n        });\n        this.completed = true;\n        this.detector.markForCheck();\n      });\n    this.userData = this.service.userData;\n    this.isButtonVisible = this.userData.type === 'customer';\n    this.chartLabels = months;\n  }\n}\n","<mat-progress-bar *ngIf=\"loading\" mode=\"indeterminate\"></mat-progress-bar>\n<div class=\"wrapper\">\n  <div class=\"card-wrapper\">\n    <mat-card>\n      <div class=\"user-information\">\n        <mat-card-header>\n          <mat-card-title>User Information</mat-card-title>\n        </mat-card-header>\n        <span><b>Name:</b> {{ userData.name }}</span>\n        <span><b>Username:</b> {{ userData.username }}</span>\n        <span><b>email:</b> {{ userData.email }}</span>\n        <span><b>type:</b> {{ userData.type }}</span>\n        <span><b>Country:</b> {{ userData.country }}</span>\n        <span><b>Address:</b> {{ userData.address }}</span>\n        <button mat-button color=\"primary\" (click)=\"editUserInfo()\">\n          Edit\n        </button>\n      </div>\n    </mat-card>\n    <mat-card>\n      <mat-card-header>\n        <mat-card-title> Pending Orders </mat-card-title>\n      </mat-card-header>\n      <cdk-virtual-scroll-viewport itemSize=\"50\" class=\"order-scroll\">\n        <div *ngFor=\"let order of pendingOrders\" class=\"orders\">\n          <ul (click)=\"openOrder(order)\" class=\"order-list\">\n            <li>\n              <span><b>Emitted: </b> {{ order.emited }}</span>\n            </li>\n            <span><b>Status: </b> {{ order.status }}</span>\n            <span><b>Destination: </b> {{ order.address }}</span>\n            <span><b>Total Price: </b> {{ order.price }}</span>\n          </ul>\n        </div>\n      </cdk-virtual-scroll-viewport>\n      <div class=\"order-button\">\n        <button\n          *ngIf=\"isButtonVisible\"\n          mat-button\n          color=\"primary\"\n          (click)=\"newOrder()\"\n        >\n          New Order\n        </button>\n      </div>\n    </mat-card>\n  </div>\n  <div class=\"card-wrapper\">\n    <mat-card>\n      <mat-card-header>\n        <mat-card-title>Transaction History</mat-card-title>\n      </mat-card-header>\n      <app-line-chart\n        *ngIf=\"completed\"\n        [allOrders]=\"allOrdersMap\"\n        [pendingOrders]=\"pendingOrdersMap\"\n        [completedOrders]=\"completedOrdersMap\"\n        [chartLabels]=\"chartLabels\"\n      ></app-line-chart>\n    </mat-card>\n    <mat-card *ngIf=\"!isBusiness\">\n      <mat-card-header>\n        <mat-card-title>All Orders</mat-card-title>\n      </mat-card-header>\n      <cdk-virtual-scroll-viewport itemSize=\"50\" class=\"order-scroll\">\n        <div *ngFor=\"let order of orders\" class=\"orders\">\n          <ul>\n            <li>\n              <span><b>Emitted: </b> {{ order.emited }}</span>\n            </li>\n            <span><b>Status: </b> {{ order.status }}</span>\n            <span><b>Destination: </b> {{ order.address }}</span>\n            <span><b>Total Price: </b> {{ order.price }}</span>\n          </ul>\n        </div>\n      </cdk-virtual-scroll-viewport>\n    </mat-card>\n    <mat-card *ngIf=\"isBusiness\">\n      <mat-card-header>\n        <mat-card-title>All Services</mat-card-title>\n      </mat-card-header>\n      <cdk-virtual-scroll-viewport itemSize=\"50\" class=\"service-scroll\">\n        <div *ngFor=\"let service of services\" class=\"services\">\n          <ul (click)=\"editService(service)\">\n            <li>\n              <span><b>Name: </b> {{ service.name }}</span>\n            </li>\n            <span><b>type: </b> {{ service.type }}</span>\n            <span><b>Description: </b> {{ service.description }}</span>\n          </ul>\n        </div>\n      </cdk-virtual-scroll-viewport>\n      <div class=\"service-button\">\n        <button mat-button color=\"primary\" (click)=\"newService()\">New</button>\n      </div>\n    </mat-card>\n  </div>\n</div>\n","<div *ngIf=\"!bill\">\n  <form [formGroup]=\"productForm\" class=\"container\">\n    <div class=\"card-container\">\n      <mat-card>\n        <div class=\"business-card\">\n          <div>\n            <mat-card-header>\n              <mat-card-title>Bussiness information</mat-card-title>\n            </mat-card-header>\n            <mat-card-content class=\"business-information\">\n              <span><b>Name:</b> {{ orderData.user.username }} </span>\n              <span><b>Email:</b> {{ orderData.user.email }} </span>\n              <span><b>Location:</b> {{ orderData.user.country }} </span>\n              <span><b>Address:</b> {{ orderData.user.address }}</span>\n            </mat-card-content>\n          </div>\n          <mat-card-content class=\"business-image\">\n            <img mat-card-image [src]=\"orderData.user.fileUrl\" />\n          </mat-card-content>\n        </div>\n        <div>\n          <mat-card-header>\n            <mat-card-title>Available Products</mat-card-title>\n          </mat-card-header>\n          <mat-card-content>\n            <cdk-virtual-scroll-viewport itemSize=\"50\" class=\"products\">\n              <div\n                *ngFor=\"let product of orderData.products\"\n                class=\"products-card\"\n              >\n                <div class=\"product-information\">\n                  <span><b>Product name: </b>{{ product.name }}</span>\n                  <span\n                    ><b>{{ description }}: </b>{{ product.description }}</span\n                  >\n                  <span><b>Price: </b>{{ product.price }}</span>\n                  <span><b>Available: </b>{{ product.stock }}</span>\n                </div>\n                <div class=\"product-selector\">\n                  <span>Amount</span>\n                  <mat-form-field class=\"amount-input\">\n                    <input\n                      matInput\n                      #amount\n                      type=\"number\"\n                      value=\"0\"\n                      min=\"0\"\n                      [max]=\"product.stock\"\n                    />\n                  </mat-form-field>\n                  <mat-checkbox\n                    color=\"primary\"\n                    #checkbox\n                    (change)=\"addProduct($event, product, amount, checkbox)\"\n                  >\n                    Add\n                  </mat-checkbox>\n                </div>\n              </div>\n            </cdk-virtual-scroll-viewport>\n          </mat-card-content>\n        </div>\n      </mat-card>\n    </div>\n    <div class=\"card-container\">\n      <mat-card>\n        <div id=\"order\" #pdfTable>\n          <mat-card-header>\n            <mat-card-title>Order</mat-card-title>\n          </mat-card-header>\n          <mat-card-content class=\"information\">\n            <span><b>Customer: </b>{{ userInformation.name }}</span>\n            <span><b>Business: </b>{{ orderData.user.username }}</span>\n            <span>\n              <b>Address: </b>\n              <mat-form-field>\n                <input matInput formControlName=\"address\" />\n              </mat-form-field>\n              <button mat-button color=\"primary\" (click)=\"enableInput()\">\n                Toggle\n              </button>\n            </span>\n            <span><b>Emitted Date:</b> {{ today | date: \"fullDate\" }}</span>\n          </mat-card-content>\n          <mat-card-header>\n            <mat-card-title>Selected Products</mat-card-title>\n          </mat-card-header>\n          <mat-card-content class=\"selected-products\">\n            <cdk-virtual-scroll-viewport\n              itemSize=\"10\"\n              class=\"selected-products-scroll\"\n            >\n              <div *ngFor=\"let product of selectedProducts\">\n                <span><b>Product:</b> {{ product.name }} </span>\n                <span><b>Price:</b> {{ product.price }} </span>\n                <span><b>Amount:</b> {{ product.amount }} </span>\n              </div>\n            </cdk-virtual-scroll-viewport>\n          </mat-card-content>\n        </div>\n      </mat-card>\n    </div>\n  </form>\n  <div class=\"card-buttons-container\">\n    <button mat-button color=\"primary\" (click)=\"back()\">Back</button>\n    <button\n      mat-button\n      color=\"primary\"\n      [disabled]=\"disableSubmit\"\n      (click)=\"toggleBill()\"\n    >\n      Order {{ price.toFixed(2) }}$\n    </button>\n  </div>\n</div>\n<div *ngIf=\"bill\" class=\"bill-wrapper\">\n  <app-bill\n    [products]=\"selectedProducts\"\n    [client]=\"userInformation.name\"\n    [sender]=\"orderData.user.name\"\n    [total]=\"price\"\n    [loading]=\"loading\"\n    (submitBill)=\"submit()\"\n    (toggleBill)=\"toggleBill()\"\n  ></app-bill>\n</div>\n","import {\n  Component,\n  OnInit,\n  Input,\n  Output,\n  EventEmitter,\n  ViewChild,\n  ElementRef,\n} from '@angular/core';\nimport { DashboardService } from '../dashboard.service';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { User } from '../types';\nimport { CREATE_ORDER } from '../mutations/createOrder';\nimport { UPDATE_PRODUCT } from '../mutations/updateProduct';\nimport { jsPDF } from 'jspdf';\nimport html2canvas from 'html2canvas';\nimport { DialogComponent } from '../dialog/dialog.component';\nimport { GET_ORDERS_BY_USER } from '../queries/getOrdersByUser';\nimport { Apollo } from 'apollo-angular';\nimport { MatDialog } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-take-order',\n  templateUrl: './take-order.component.html',\n  styleUrls: ['./take-order.component.scss'],\n})\nexport class TakeOrderComponent implements OnInit {\n  @ViewChild('pdfTable', { static: false }) pdfTable: ElementRef;\n  @Input() orderData: any;\n  @Output() return = new EventEmitter();\n  description: string;\n  selectedProducts: any = [];\n  userInformation: User;\n  orderProduct: any;\n  today: number = Date.now();\n  changeAddress: boolean = true;\n  price: number = 0;\n  disableSubmit: boolean = true;\n  bill: boolean = false;\n  loading: boolean = false;\n  file: any;\n\n  constructor(\n    private service: DashboardService,\n    private apollo: Apollo,\n    private dialog: MatDialog\n  ) {\n    this.userInformation = this.service.userData;\n  }\n\n  productForm = new FormGroup({\n    address: new FormControl(\n      { value: '', disabled: this.changeAddress },\n      Validators.required\n    ),\n  });\n  back(): void {\n    this.return.emit(false);\n  }\n\n  enableInput(): void {\n    this.changeAddress = !this.changeAddress;\n    this.productForm.controls['address'].reset({\n      value: this.userInformation.address,\n      disabled: this.changeAddress,\n    });\n  }\n\n  ngOnInit(): void {\n    this.productForm.controls['address'].setValue(this.userInformation.address);\n    if (this.orderData.service.type === 'Food') {\n      this.description = 'Ingredients';\n    } else {\n      this.description = 'Description';\n    }\n  }\n\n  addProduct(event: any, product: any, amount: any, checkbox: any): void {\n    const { __typename, ...data } = product;\n    const products = { ...data, amount: Number(amount.value) };\n    const productData = { ...products, service: this.orderData.service._id };\n    if (!checkbox.checked) {\n      const index = this.containsProduct(productData.name);\n      this.selectedProducts.splice(index, 1);\n      checkbox.checked = false;\n      amount.disabled = false;\n    } else {\n      if (this.containsProduct(product.name) >= 0) {\n        checkbox.checked = true;\n        amount.disabled = true;\n      } else {\n        if (amount.value === '0') {\n          checkbox.checked = false;\n        } else {\n          if (event.checked) {\n            amount.disabled = true;\n            this.price = Number(\n              (this.price + productData.price * productData.amount).toFixed(2)\n            );\n            this.selectedProducts.push(productData);\n          } else {\n            amount.disabled = false;\n            this.price -= Number(\n              (productData.price * productData.amount).toFixed(2)\n            );\n            this.selectedProducts = this.selectedProducts.filter(\n              (value: any) => value._id !== productData._id\n            );\n          }\n        }\n        if (this.selectedProducts.length > 0) {\n          this.disableSubmit = false;\n        } else {\n          this.disableSubmit = true;\n        }\n      }\n    }\n  }\n\n  containsProduct(product: string): Number {\n    for (let i = 0; i < this.selectedProducts.length; i++) {\n      if (this.selectedProducts[i].name === product) {\n        return i;\n      }\n    }\n    return -1;\n  }\n\n  toggleBill(): void {\n    this.bill = !this.bill;\n  }\n\n  async exportPdf(): Promise<any> {\n    const template = document.getElementById('bill');\n    return await html2canvas(template).then(async (canvas) => {\n      try {\n        const imgWidth = 200;\n        const imgHeight = (canvas.height * imgWidth) / canvas.width;\n        const xAxis = 2;\n        const yAxis = 50;\n        const doc = new jsPDF();\n        const image = canvas.toDataURL('image/png');\n        doc.addImage(image, 'PNG', xAxis, yAxis, imgWidth, imgHeight);\n        this.file = doc.output('blob');\n        const xhr = new XMLHttpRequest();\n        const formData = new FormData();\n        formData.append('order', this.file);\n        xhr.open('POST', 'http://localhost:4000/uploadFile');\n        xhr.setRequestHeader('businessEmail', this.orderData.user.email);\n        xhr.setRequestHeader('userEmail', this.userInformation.email);\n        xhr.send(formData);\n      } catch (err) {\n        this.dialog.open(DialogComponent, {\n          data: 'Something went wrong, please contact the support team',\n        });\n      }\n    });\n  }\n\n  submit(): void {\n    this.loading = true;\n    this.exportPdf().then((value) => {\n      const orderData = {\n        address: this.productForm.value.address,\n        emited: new Date().toDateString(),\n        service: this.orderData.service._id,\n        price: Number(this.price.toFixed(2)),\n        status: 'In process',\n        products: this.selectedProducts.map((data: any) => data._id),\n        user: this.userInformation._id,\n        business: this.orderData.user._id,\n        fileUrl: value,\n      };\n      this.apollo\n        .mutate({\n          mutation: CREATE_ORDER,\n          variables: {\n            orderData,\n          },\n          refetchQueries: [\n            {\n              query: GET_ORDERS_BY_USER,\n              variables: { userID: this.service.userData._id },\n            },\n          ],\n        })\n        .subscribe(() => {\n          try {\n            this.apollo\n              .mutate({\n                mutation: UPDATE_PRODUCT,\n                variables: { productData: { products: this.selectedProducts } },\n              })\n              .toPromise()\n              .then(() => {\n                this.back();\n                this.dialog.open(DialogComponent, {\n                  data: 'Order successfully loaded!',\n                });\n              })\n              .catch(() => {\n                this.dialog.open(DialogComponent, {\n                  data: 'There was an error updating the product stock',\n                });\n              });\n          } catch (err) {\n            this.dialog.open(DialogComponent, {\n              data: 'Something went wrong. Please contact the support team',\n            });\n          }\n        });\n    });\n  }\n}\n","<mat-progress-bar\n  *ngIf=\"uploadPercent\"\n  mode=\"determinate\"\n  value=\"uploadPercent\"\n></mat-progress-bar>\n<mat-card class=\"card\">\n  <form [formGroup]=\"userForm\" class=\"user-data\" (ngSubmit)=\"update()\">\n    <div class=\"image-wrapper\">\n      <img alt=\"Profile Photo\" [src]=\"imageUrl\" (click)=\"fileInput.click()\" />\n      <input\n        #fileInput\n        type=\"file\"\n        class=\"custom-file-input\"\n        accept=\"image/*\"\n        (change)=\"onChangeFile($event)\"\n      />\n    </div>\n    <mat-form-field>\n      <mat-label>Name</mat-label>\n      <input matInput type=\"text\" formControlName=\"name\" />\n    </mat-form-field>\n    <mat-form-field>\n      <mat-label>Username</mat-label>\n      <input matInput type=\"text\" formControlName=\"username\" />\n    </mat-form-field>\n    <mat-form-field>\n      <mat-label>Email</mat-label>\n      <input matInput type=\"email\" formControlName=\"email\" />\n    </mat-form-field>\n    <mat-form-field>\n      <mat-label>Current Password</mat-label>\n      <input matInput type=\"password\" formControlName=\"currentPassword\" />\n    </mat-form-field>\n    <mat-form-field>\n      <mat-label>New Password</mat-label>\n      <input matInput type=\"password\" formControlName=\"password\" />\n    </mat-form-field>\n    <mat-form-field>\n      <mat-label>Country</mat-label>\n      <input matInput type=\"text\" formControlName=\"country\" />\n    </mat-form-field>\n    <mat-form-field>\n      <mat-label>Address</mat-label>\n      <input matInput type=\"text\" formControlName=\"address\" />\n    </mat-form-field>\n    <mat-form-field>\n      <mat-label>Type</mat-label>\n      <input matInput type=\"text\" formControlName=\"type\" readonly />\n    </mat-form-field>\n    <button\n      type=\"submit\"\n      mat-button\n      color=\"primary\"\n      [disabled]=\"!userForm.valid\"\n    >\n      Update\n    </button>\n    <button mat-button color=\"primary\" type=\"button\" (click)=\"back()\">\n      Back\n    </button>\n  </form>\n</mat-card>\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { DashboardService } from '../dashboard.service';\nimport { Apollo } from 'apollo-angular';\nimport { UPDATE_USER } from '../mutations/updateUser';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { UserDataResponse } from '../interfaces';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Location } from '@angular/common';\nimport { DialogComponent } from '../dialog/dialog.component';\nimport * as crypto from 'crypto-js';\n\n@Component({\n  selector: 'app-user-profile',\n  templateUrl: './user-profile.component.html',\n  styleUrls: ['./user-profile.component.scss'],\n})\nexport class UserProfileComponent implements OnInit {\n  uploadPercent: Observable<number>;\n  imageUrl: any;\n\n  userForm = new FormGroup({\n    file: new FormControl('', [Validators.required]),\n    name: new FormControl('', [Validators.required]),\n    username: new FormControl('', [\n      Validators.required,\n      Validators.minLength(4),\n    ]),\n    currentPassword: new FormControl('', [\n      Validators.required,\n      Validators.minLength(6),\n    ]),\n    password: new FormControl('', [\n      Validators.required,\n      Validators.minLength(6),\n    ]),\n    email: new FormControl('', [Validators.required, Validators.email]),\n    country: new FormControl('', [Validators.required]),\n    address: new FormControl('', [Validators.required]),\n    type: new FormControl('', [Validators.required]),\n  });\n\n  constructor(\n    private service: DashboardService,\n    private apollo: Apollo,\n    private router: Router,\n    private dialog: MatDialog,\n    private location: Location\n  ) {}\n\n  ngOnInit(): void {\n    this.userForm.controls['name'].setValue(this.service.userData.name);\n    this.userForm.controls['username'].setValue(this.service.userData.username);\n    this.userForm.controls['email'].setValue(this.service.userData.email);\n    this.userForm.controls['country'].setValue(this.service.userData.country);\n    this.userForm.controls['type'].setValue(this.service.userData.type);\n    this.userForm.controls['file'].setValue(this.service.userData.fileUrl);\n    this.userForm.controls['address'].setValue(this.service.userData.address);\n    this.imageUrl = this.userForm.value.file;\n  }\n\n  onChangeFile(event: any): void {\n    const reader = new FileReader();\n    this.userForm.controls['file'].setValue(event.target.files);\n    reader.readAsDataURL(this.userForm.value.file[0]);\n    reader.onload = () => {\n      this.imageUrl = reader.result;\n      console.log(this.imageUrl);\n    };\n  }\n\n  update(): void {\n    if (this.userForm.value.file != this.service.userData.fileUrl) {\n      this.service.removeFile(this.service.userData.fileUrl);\n      this.service\n        .uploadFile(this.userForm.value.file[0], this.service.userData.username)\n        .subscribe((e) => {\n          e.ref.getDownloadURL().then((value) => {\n            this.updateUser(value);\n          });\n        });\n    } else {\n      this.updateUser(this.service.userData.fileUrl);\n    }\n  }\n\n  updateUser(fileUrl: string): void {\n    const { currentPassword, ...filteredData } = this.userForm.value;\n    const { file, ...data } = filteredData;\n    const userData = {\n      ...data,\n      password: this.userForm.value.password,\n      fileUrl: fileUrl,\n    };\n    this.apollo\n      .mutate<UserDataResponse>({\n        mutation: UPDATE_USER,\n        variables: {\n          where: { _id: this.service.userData._id },\n          userData: userData,\n          currentPassword: this.userForm.value.currentPassword,\n        },\n      })\n      .toPromise()\n      .then((response) => {\n        if (response.data) {\n          this.dialog.open(DialogComponent, {\n            data: 'User updated successfully',\n          });\n          this.router.navigate(['dashboard/summary']);\n          this.service.userData = response.data.updateUser;\n        }\n      })\n      .catch((err) => {\n        const error = err.message.split(':')[1];\n        this.dialog.open(DialogComponent, { data: error });\n      });\n  }\n\n  back(): void {\n    this.location.back();\n  }\n}\n","let accessToken: string = '';\n\nexport const setAccessToken = (token: string): void => {\n  accessToken = token;\n};\n\nexport const getAccessToken = (): string => {\n  return accessToken;\n};\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebaseConfig: {\n    apiKey: 'AIzaSyDYoeSx7TdFjS7LY3lT5uEO5LIi0m_85Dc',\n    authDomain: 'delivery-app-73352.firebaseapp.com',\n    databaseURL: 'https://delivery-app-73352.firebaseio.com',\n    projectId: 'delivery-app-73352',\n    storageBucket: 'delivery-app-73352.appspot.com',\n    messagingSenderId: '972811880933',\n    appId: '1:972811880933:web:404bfcc550b8613904870c',\n    measurementId: 'G-Z6H7C3QEYQ',\n  },\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}